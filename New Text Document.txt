import com.networknt.schema.JsonSchema;
import com.networknt.schema.JsonSchemaFactory;
import com.networknt.schema.ValidationMessage;

import java.io.IOException;
import java.io.InputStream;
import java.util.Set;

public class JsonValidator {

    public static void main(String[] args) throws IOException {
        // Load the schema
        InputStream schemaStream = JsonValidator.class.getResourceAsStream("/path/to/schema.json");
        JsonSchema schema = JsonSchemaFactory.getInstance().getSchema(schemaStream);

        // Load the sample JSON
        InputStream jsonStream = JsonValidator.class.getResourceAsStream("/path/to/sample.json");
        Object json = JsonSchemaFactory.getInstance().getJsonMapper().readValue(jsonStream, Object.class);

        // Validate the JSON against the schema
        Set<ValidationMessage> validationMessages = schema.validate(json);

        // Process the validation results
        if (validationMessages.isEmpty()) {
            System.out.println("JSON is valid!");
        } else {
            System.out.println("JSON is invalid. Validation errors:");
            for (ValidationMessage message : validationMessages) {
                System.out.println(message.getMessage());
            }
        }
    }
}