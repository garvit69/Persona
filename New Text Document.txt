import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.IOException;
import java.util.*;

public class RefMapping {
    public static void main(String[] args) {
        String json = "{\"Payment\": {\n" +
                "  \"Desc\": \"\",\n" +
                "  \"Type\": \"\",\n" +
                "  \"Properties\": {\n" +
                "    \"wfPmt\": {\n" +
                "      \"$ref\": \"#/definitions/Wf\"\n" +
                "    }\n" +
                "  }\n" +
                "}}";

        Map<String, List<String>> refMapping = new HashMap<>();
        extractRefs("", json, refMapping);
        System.out.println(refMapping);
    }

    private static void extractRefs(String parent, String json, Map<String, List<String>> refMapping) {
        if (json == null || json.isEmpty()) {
            return;
        }

        Map<String, Object> data = parseJson(json);
        if (data == null) {
            return;
        }

        for (Map.Entry<String, Object> entry : data.entrySet()) {
            String key = entry.getKey();
            Object value = entry.getValue();

            if (value instanceof Map) {
                extractRefs(key, toJsonString(value), refMapping);
            } else if (key.equals("$ref")) {
                refMapping.computeIfAbsent(parent, k -> new ArrayList<>()).add(value.toString());
            }
        }
    }

    private static Map<String, Object> parseJson(String json) {
        // Parse JSON string into a Map using your preferred JSON library
        // In this example, we are using Jackson ObjectMapper
        try {
            ObjectMapper mapper = new ObjectMapper();
            return mapper.readValue(json, new TypeReference<Map<String, Object>>() {});
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    private static String toJsonString(Object object) {
        // Convert an object to JSON string using your preferred JSON library
        // In this example, we are using Jackson ObjectMapper
        try {
            ObjectMapper mapper = new ObjectMapper();
            return mapper.writeValueAsString(object);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
        }
        return null;
    }
}