import java.util.ArrayList;
import java.util.List;

public class SchemaPathFinder {
    public static void main(String[] args) {
        // Example schema data
        String schemaData = "{\n" +
                "  \"properties\": {\n" +
                "    \"appHdr\": {\n" +
                "      \"$ref\": \"#/definitions/BusinessApplicationHeaderV2\"\n" +
                "    }\n" +
                "  }\n" +
                "}";
        
        List<String> paths = getAllPaths(schemaData);
        
        for (String path : paths) {
            System.out.println(path);
        }
    }

    private static List<String> getAllPaths(String schemaData) {
        List<String> paths = new ArrayList<>();
        findPaths(schemaData, "#", paths);
        return paths;
    }

    private static void findPaths(String schemaData, String basePath, List<String> paths) {
        if (schemaData.contains("$ref")) {
            int refIndex = schemaData.indexOf("$ref");
            int quoteIndex = schemaData.indexOf("\"", refIndex + 7);
            String refPath = schemaData.substring(quoteIndex + 1, schemaData.indexOf("\"", quoteIndex + 1));
            String newBasePath = refPath.startsWith("#") ? refPath.substring(1) : basePath + "/" + refPath;
            paths.add(newBasePath);
            findPaths(refPath, newBasePath, paths);
        } else if (schemaData.contains("properties")) {
            int propertiesIndex = schemaData.indexOf("properties");
            int braceIndex = schemaData.indexOf("{", propertiesIndex);
            int closingBraceIndex = findClosingBraceIndex(schemaData, braceIndex);
            String propertiesContent = schemaData.substring(braceIndex + 1, closingBraceIndex);

            while (propertiesContent.contains("$ref")) {
                int refIndex = propertiesContent.indexOf("$ref");
                int quoteIndex = propertiesContent.indexOf("\"", refIndex + 7);
                String refPath = propertiesContent.substring(quoteIndex + 1, propertiesContent.indexOf("\"", quoteIndex + 1));
                String newBasePath = basePath + "/" + refPath;
                paths.add(newBasePath);
                findPaths(refPath, newBasePath, paths);
                propertiesContent = propertiesContent.substring(quoteIndex + 1);
            }
        }
    }

    private static int findClosingBraceIndex(String schemaData, int startIndex) {
        int count = 1;
        int index = startIndex + 1;
        while (count > 0 && index < schemaData.length()) {
            char c = schemaData.charAt(index);
            if (c == '{') {
                count++;
            } else if (c == '}') {
                count--;
            }
            index++;
        }
        return index - 1;
    }
}